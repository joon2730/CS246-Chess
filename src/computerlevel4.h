#ifndef COMPUTERLEVEL4_H
#define COMPUTERLEVEL4_H

#include "computer.h"
#include "chessai.h"
#include <string>
#include <memory>

using std::string;

class ComputerLevel4: public ChessAI, public Computer {
    static const int NUM_PIECE_TYPES = 6;
    static const int ROWS = 8, COLS = 8;
  public:
    ComputerLevel4(int side);
    Move makeMove(Board &board) override;
    int evaluateBoard(Board& board) override;
  private:
    // heuristics for evaluating board
    const int piece_value[NUM_PIECE_TYPES] = {100, 320, 330, 500, 900, 20000};
    int position_values[NUM_PIECE_TYPES][ROWS][COLS] = {
      // Pawn
      {{0,  0,  0,  0,  0,  0,  0,  0},
       {50, 50, 50, 50, 50, 50, 50, 50},
       {10, 10, 20, 30, 30, 20, 10, 10},
       {5,  5, 10, 25, 25, 10,  5,  5},
       {0,  0,  0, 20, 20,  0,  0,  0},
       {5, -5,-10,  0,  0,-10, -5,  5},
       {5, 10, 10,-20,-20, 10, 10,  5},
       {0,  0,  0,  0,  0,  0,  0,  0}},

      // Knight
      {{-50,-40,-30,-30,-30,-30,-40,-50},
       {-40,-20,  0,  0,  0,  0,-20,-40},
       {-30,  0, 10, 15, 15, 10,  0,-30},
       {-30,  5, 15, 20, 20, 15,  5,-30},
       {-30,  0, 15, 20, 20, 15,  0,-30},
       {-30,  5, 10, 15, 15, 10,  5,-30},
       {-40,-20,  0,  5,  5,  0,-20,-40},
       {-50,-40,-30,-30,-30,-30,-40,-50}},

      // Bishop
      {{-20,-10,-10,-10,-10,-10,-10,-20},
       {-10,  0,  0,  0,  0,  0,  0,-10},
       {-10,  0,  5, 10, 10,  5,  0,-10},
       {-10,  5,  5, 10, 10,  5,  5,-10},
       {-10,  0, 10, 10, 10, 10,  0,-10},
       {-10, 10, 10, 10, 10, 10, 10,-10},
       {-10,  5,  0,  0,  0,  0,  5,-10},
       {-20,-10,-10,-10,-10,-10,-10,-20}},

      // Rook
      {{ 0,  0,  0,  0,  0,  0,  0,  0},
       { 5, 10, 10, 10, 10, 10, 10,  5},
       {-5,  0,  0,  0,  0,  0,  0, -5},
       {-5,  0,  0,  0,  0,  0,  0, -5},
       {-5,  0,  0,  0,  0,  0,  0, -5},
       {-5,  0,  0,  0,  0,  0,  0, -5},
       {-5,  0,  0,  0,  0,  0,  0, -5},
       { 0,  0,  0,  5,  5,  0,  0,  0}},

      // Queen
      {{-20,-10,-10, -5, -5,-10,-10,-20},
       {-10,  0,  0,  0,  0,  0,  0,-10},
       {-10,  0,  5,  5,  5,  5,  0,-10},
       { -5,  0,  5,  5,  5,  5,  0, -5},
       {  0,  0,  5,  5,  5,  5,  0, -5},
       {-10,  5,  5,  5,  5,  5,  0,-10},
       {-10,  0,  5,  0,  0,  0,  0,-10},
       {-20,-10,-10, -5, -5,-10,-10,-20}},

      // King
      {{-30,-40,-40,-50,-50,-40,-40,-30},
       {-30,-40,-40,-50,-50,-40,-40,-30},
       {-30,-40,-40,-50,-50,-40,-40,-30},
       {-30,-40,-40,-50,-50,-40,-40,-30},
       {-20,-30,-30,-40,-40,-30,-30,-20},
       {-10,-20,-20,-20,-20,-20,-20,-10},
       { 20, 20,  0,  0,  0,  0, 20, 20},
       { 20, 30, 10,  0,  0, 10, 30, 20}}
    };
};
#endif


